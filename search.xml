<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>编程的一些小技巧</title>
      <link href="/2022/12/03/%E7%BC%96%E7%A8%8B%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
      <url>/2022/12/03/%E7%BC%96%E7%A8%8B%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Flutter"><a href="#1-Flutter" class="headerlink" title="1. Flutter"></a>1. Flutter</h2><h3 id="1-1-Flutter构建脚本"><a href="#1-1-Flutter构建脚本" class="headerlink" title="1.1 Flutter构建脚本"></a>1.1 Flutter构建脚本</h3><p>将以下内容保存为bat脚本，然后放在项目根目录下，双击运行，或在命令行中执行即可。其作用是构建Web、Windows、Android三个平台的应用，并将构建结果放在“release\release-current_time”目录下，如有构建其他平台的应用的需求，可以自行修改此脚本。</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">call</span> flutter clean</span><br><span class="line"><span class="keyword">call</span> flutter create .</span><br><span class="line"><span class="keyword">call</span> flutter build web</span><br><span class="line"><span class="keyword">call</span> flutter build windows</span><br><span class="line"><span class="keyword">call</span> flutter build apk --split-per-abi</span><br><span class="line"><span class="comment">@REM</span></span><br><span class="line"><span class="built_in">set</span> current_time=<span class="variable">%date:~0,10%</span>-<span class="variable">%time:~0,8%</span></span><br><span class="line"><span class="built_in">set</span> current_time=<span class="variable">%current_time:/=-%</span></span><br><span class="line"><span class="built_in">set</span> current_time=<span class="variable">%current_time::=-%</span></span><br><span class="line"><span class="built_in">set</span> release_dir=.\release\release-<span class="variable">%current_time%</span></span><br><span class="line"><span class="comment">@REM</span></span><br><span class="line"><span class="keyword">call</span> <span class="built_in">mkdir</span> <span class="variable">%release_dir%</span></span><br><span class="line"><span class="comment">@REM</span></span><br><span class="line"><span class="keyword">call</span> <span class="built_in">move</span> build\app\outputs\apk\release\app-* <span class="variable">%release_dir%</span>\</span><br><span class="line"><span class="keyword">call</span> tar -cvf <span class="variable">%release_dir%</span>\windows.tar -C .\build\windows\runner\Release\ .</span><br><span class="line"><span class="keyword">call</span> tar -cvf <span class="variable">%release_dir%</span>\web.tar -C .\build\web\ .</span><br></pre></td></tr></table></figure><h2 id="2-Python"><a href="#2-Python" class="headerlink" title="2. Python"></a>2. Python</h2><h3 id="2-1-Python-Venv虚拟环境"><a href="#2-1-Python-Venv虚拟环境" class="headerlink" title="2.1 Python Venv虚拟环境"></a>2.1 Python Venv虚拟环境</h3><p>Python Venv虚拟环境是Python的一个特性，可以用来创建独立的Python环境，避免不同项目之间的依赖冲突。一般在使用PyCharm创建Python项目时，默认会在项目根目录下创建Venv虚拟环境。</p><h4 id="2-1-1-创建虚拟环境"><a href="#2-1-1-创建虚拟环境" class="headerlink" title="2.1.1 创建虚拟环境"></a>2.1.1 创建虚拟环境</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m venv venv</span><br></pre></td></tr></table></figure><h4 id="2-1-2-激活虚拟环境"><a href="#2-1-2-激活虚拟环境" class="headerlink" title="2.1.2 激活虚拟环境"></a>2.1.2 激活虚拟环境</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\venv\Scripts\activate</span><br></pre></td></tr></table></figure><h5 id="2-1-2-1-在PowerShell-Profile中配置激活虚拟环境方法"><a href="#2-1-2-1-在PowerShell-Profile中配置激活虚拟环境方法" class="headerlink" title="2.1.2.1 在PowerShell Profile中配置激活虚拟环境方法"></a>2.1.2.1 在PowerShell Profile中配置激活虚拟环境方法</h5><p>打开PowerShell Profile文件（可在Powershell中通过“$PROFILE”查看文件目录），并在其中添加以下内容：</p><figure class="highlight ps1"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">activate-venv</span></span> &#123;</span><br><span class="line">    .\venv\Scripts\activate</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在PowerShell中，当处于已有Venv虚拟环境的Python项目目录下时，输入“activate-venv”即可激活虚拟环境，无需每次都输入“.\venv\Scripts\activate”。</p><h4 id="2-1-3-退出虚拟环境"><a href="#2-1-3-退出虚拟环境" class="headerlink" title="2.1.3 退出虚拟环境"></a>2.1.3 退出虚拟环境</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deactivate</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Flutter </tag>
            
            <tag> Programming </tag>
            
            <tag> Python Venv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编程遇到的一些问题及解决方案</title>
      <link href="/2022/11/27/%E7%BC%96%E7%A8%8B%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>/2022/11/27/%E7%BC%96%E7%A8%8B%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Android-Studio"><a href="#1-Android-Studio" class="headerlink" title="1. Android Studio"></a>1. Android Studio</h2><h3 id="1-1-Android-Emulate花屏或A卡驱动出错"><a href="#1-1-Android-Emulate花屏或A卡驱动出错" class="headerlink" title="1.1 Android Emulate花屏或A卡驱动出错"></a>1.1 Android Emulate花屏或A卡驱动出错</h3><h4 id="1-1-1-问题描述"><a href="#1-1-1-问题描述" class="headerlink" title="1.1.1 问题描述"></a>1.1.1 问题描述</h4><p>使用A卡的情况下（本人配置为5700X+6750XT），可能会出现花屏、报错“Checking for bad AMD Vulkan driver version”的问题：</p><p><img src="https://cdn.jsdelivr.net/gh/leok77s/blog-leok77s-img@main/%E7%BC%96%E7%A8%8B%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88-2022-11-27-13-08-59.png" alt="Android Emulate花屏"></p><p><img src="https://cdn.jsdelivr.net/gh/leok77s/blog-leok77s-img@main/%E7%BC%96%E7%A8%8B%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88-2022-11-27-13-36-05.png" alt="Android Emulate：Checking for bad AMD Vulkan driver version"></p><h4 id="1-1-2-解决方案"><a href="#1-1-2-解决方案" class="headerlink" title="1.1.2 解决方案"></a>1.1.2 解决方案</h4><p>在“C:\Users\username\.android”中新建“advancedFeatures.ini”文件，比如我的路径为“C:\Users\LeoK77\.android\advancedFeatures.ini”，向其写入如下内容：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Vulkan</span> = <span class="literal">off</span></span><br><span class="line"><span class="attr">GLDirectMen</span> = <span class="literal">on</span></span><br></pre></td></tr></table></figure><p>或者可以将下述内容保存为一个bat文件，然后双击运行（本质上还是上述解决方案，只是以bat脚本的形式执行）：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> android_dir=<span class="variable">%USERPROFILE%</span>\.android</span><br><span class="line"><span class="built_in">mkdir</span> <span class="variable">%android_dir%</span></span><br><span class="line">(</span><br><span class="line"><span class="built_in">echo</span> Vulkan = off</span><br><span class="line"><span class="built_in">echo</span> GLDirectMen = on</span><br><span class="line">) &gt; <span class="variable">%android_dir%</span>\advancedFeatures.ini</span><br></pre></td></tr></table></figure><h2 id="2-Flutter"><a href="#2-Flutter" class="headerlink" title="2. Flutter"></a>2. Flutter</h2><h3 id="2-1-Runtime-JAR-files-in-the-classpath-should-have-the-same-version"><a href="#2-1-Runtime-JAR-files-in-the-classpath-should-have-the-same-version" class="headerlink" title="2.1 Runtime JAR files in the classpath should have the same version"></a>2.1 Runtime JAR files in the classpath should have the same version</h3><h4 id="2-1-1-问题描述"><a href="#2-1-1-问题描述" class="headerlink" title="2.1.1 问题描述"></a>2.1.1 问题描述</h4><p>使用Flutter构建Android应用时，可能会出现如下Warning，虽然不是Error，但是构建的时候看到这些真的十分碍眼：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">w: Runtime JAR files in the classpath should have the same version. These files were found in the classpath:</span><br><span class="line">    C:/Users/LeoK77S/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib-jdk8/1.5.30/5fd47535cc85f9e24996f939c2de6583991481b0/kotlin-stdlib-jdk8-1.5.30.jar (version 1.5)</span><br><span class="line">    C:/Users/LeoK77S/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib-jdk7/1.6.10/e1c380673654a089c4f0c9f83d0ddfdc1efdb498/kotlin-stdlib-jdk7-1.6.10.jar (version 1.6)</span><br><span class="line">    C:/Users/LeoK77S/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib/1.6.10/b8af3fe6f1ca88526914929add63cf5e7c5049af/kotlin-stdlib-1.6.10.jar (version 1.6)</span><br><span class="line">    C:/Users/LeoK77S/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib-common/1.6.10/c118700e3a33c8a0d9adc920e9dec0831171925/kotlin-stdlib-common-1.6.10.jar (version 1.6)</span><br><span class="line">w: Some runtime JAR files in the classpath have an incompatible version. Consider removing them from the classpath</span><br><span class="line">w: Runtime JAR files in the classpath should have the same version. These files were found in the classpath:</span><br><span class="line">    C:/Users/LeoK77S/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib-jdk8/1.5.30/5fd47535cc85f9e24996f939c2de6583991481b0/kotlin-stdlib-jdk8-1.5.30.jar (version 1.5)</span><br><span class="line">    C:/Users/LeoK77S/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib-jdk7/1.6.10/e1c380673654a089c4f0c9f83d0ddfdc1efdb498/kotlin-stdlib-jdk7-1.6.10.jar (version 1.6)</span><br><span class="line">    C:/Users/LeoK77S/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib/1.6.10/b8af3fe6f1ca88526914929add63cf5e7c5049af/kotlin-stdlib-1.6.10.jar (version 1.6)</span><br><span class="line">    C:/Users/LeoK77S/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib-common/1.6.10/c118700e3a33c8a0d9adc920e9dec0831171925/kotlin-stdlib-common-1.6.10.jar (version 1.6)</span><br><span class="line">w: Some runtime JAR files in the classpath have an incompatible version. Consider removing them from the classpath</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/leok77s/blog-leok77s-img@main/%E7%BC%96%E7%A8%8B%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88-2022-11-27-13-27-01.png" alt="Flutter build apk Warning"></p><h4 id="2-1-2-解决方案"><a href="#2-1-2-解决方案" class="headerlink" title="2.1.2 解决方案"></a>2.1.2 解决方案</h4><p>将Flutter项目目录下，“.\android\app\build.gradle”中，“dependencies”的“implementation”由“jdk7”修改为“jdk8”：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改前</span></span><br><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    implementation <span class="string">&quot;org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 修改后</span></span><br><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    implementation <span class="string">&quot;org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-2-Waiting-for-another-flutter-command-to-release-the-startup-lock"><a href="#2-2-Waiting-for-another-flutter-command-to-release-the-startup-lock" class="headerlink" title="2.2 Waiting for another flutter command to release the startup lock"></a>2.2 Waiting for another flutter command to release the startup lock</h3><h4 id="2-2-1-问题描述"><a href="#2-2-1-问题描述" class="headerlink" title="2.2.1 问题描述"></a>2.2.1 问题描述</h4><p>使用Flutter构建应用时，可能会出现如下信息并进入无响应状态等待系统释放资源：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Waiting for another flutter command to release the startup lock...</span><br></pre></td></tr></table></figure><p>可能的原因是Flutter构建应用时出现问题，导致Flutter进程未正常退出，系统资源未释放。我出现此问题的情景是在VS Code中构建Flutter应用时无响应，然后多点了几次“Run”依旧无法构建，随后使用命令行构建时出现此问题。经检查任务管理器，发现有好几个“dart.exe”在运行。</p><h4 id="2-2-2-解决方案"><a href="#2-2-2-解决方案" class="headerlink" title="2.2.2 解决方案"></a>2.2.2 解决方案</h4><p>打开任务管理器，找到“dart.exe”进程，结束掉即可。</p><h2 id="3-Python"><a href="#3-Python" class="headerlink" title="3. Python"></a>3. Python</h2><h3 id="3-1-ModuleNotFoundError-No-module-named-‘pip’"><a href="#3-1-ModuleNotFoundError-No-module-named-‘pip’" class="headerlink" title="3.1 ModuleNotFoundError: No module named ‘pip’"></a>3.1 ModuleNotFoundError: No module named ‘pip’</h3><h4 id="3-1-1-问题描述"><a href="#3-1-1-问题描述" class="headerlink" title="3.1.1 问题描述"></a>3.1.1 问题描述</h4><p>在使用Python时，可能会出现如下错误：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ModuleNotFoundError: No module named &#x27;pip&#x27;</span><br></pre></td></tr></table></figure><h4 id="3-1-2-解决方案"><a href="#3-1-2-解决方案" class="headerlink" title="3.1.2 解决方案"></a>3.1.2 解决方案</h4><p>在命令行中输入：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m ensurepip</span><br></pre></td></tr></table></figure><h2 id="4-CMD"><a href="#4-CMD" class="headerlink" title="4. CMD"></a>4. CMD</h2><h3 id="4-1-Bat脚本只运行一行"><a href="#4-1-Bat脚本只运行一行" class="headerlink" title="4.1 Bat脚本只运行一行"></a>4.1 Bat脚本只运行一行</h3><h4 id="4-1-1-问题描述"><a href="#4-1-1-问题描述" class="headerlink" title="4.1.1 问题描述"></a>4.1.1 问题描述</h4><p>执行Bat脚本时，只执行了第一行命令，后面的命令没有执行。尤其是脚本内容涉及目录变换、调用其他可执行文件等操作时，可能会出现此问题。</p><h4 id="4-1-2-解决方案"><a href="#4-1-2-解决方案" class="headerlink" title="4.1.2 解决方案"></a>4.1.2 解决方案</h4><p>在需要执行的命令前加上“call”关键字，如：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">call</span> hexo clean</span><br><span class="line"><span class="keyword">call</span> hexo generate</span><br><span class="line"><span class="keyword">call</span> hexo deploy</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Flutter </tag>
            
            <tag> Programming </tag>
            
            <tag> Android </tag>
            
            <tag> Python </tag>
            
            <tag> AMD </tag>
            
            <tag> Kotlin </tag>
            
            <tag> Gradle </tag>
            
            <tag> Pip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows日常使用中踩过的坑</title>
      <link href="/2022/11/20/Windows%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8%E4%B8%AD%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91/"/>
      <url>/2022/11/20/Windows%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8%E4%B8%AD%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<h2 id="1-CMD闪退及BAT脚本无法运行"><a href="#1-CMD闪退及BAT脚本无法运行" class="headerlink" title="1. CMD闪退及BAT脚本无法运行"></a>1. CMD闪退及BAT脚本无法运行</h2><h3 id="1-1-问题描述"><a href="#1-1-问题描述" class="headerlink" title="1.1 问题描述"></a>1.1 问题描述</h3><ul><li>打开CMD窗口，窗口一闪而过，无法正常使用。</li><li>bat文件无法正常运行，一闪而过。</li><li>Powershell中部分命令无法正常运行，直接显示下一行。<ul><li>flutter命令</li><li>code命令（VS Code）</li><li>…</li></ul></li><li>Git安装提示：“Line XXXX. Unable to run post-install scripts, no output.”</li></ul><h3 id="1-2-问题原因"><a href="#1-2-问题原因" class="headerlink" title="1.2 问题原因"></a>1.2 问题原因</h3><p>安装Anaconda之后，其会将注册表中的“AutoRun”命令赋值为“if exist”，即使卸载Anacoda，注册表中的“AutoRun”命令仍然存在，导致CMD窗口一闪而过，且所有的bat脚本都无法运行。</p><h3 id="1-3-解决方法"><a href="#1-3-解决方法" class="headerlink" title="1.3 解决方法"></a>1.3 解决方法</h3><ul><li>删除注册表中“AutoRun”字段的值：<ul><li>按下Win+R，输入regedit，打开注册表编辑器。</li><li>顶部输入“计算机\HKEY_CURRENT_USER\SOFTWARE\Microsoft\Command Processor”。</li><li>双击“AutoRun”字段，删除其值，点击确定。</li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/leok77s/blog-leok77s-img@main/Windows%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8%E4%B8%AD%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91-2022-11-20-13-52-26.png" alt="修改注册表内容"></p><h2 id="2-AMD显卡驱动与AMD-Radeon-Software冲突"><a href="#2-AMD显卡驱动与AMD-Radeon-Software冲突" class="headerlink" title="2. AMD显卡驱动与AMD Radeon Software冲突"></a>2. AMD显卡驱动与AMD Radeon Software冲突</h2><h3 id="2-1-问题描述"><a href="#2-1-问题描述" class="headerlink" title="2.1 问题描述"></a>2.1 问题描述</h3><p>试图打开AMD Software: Adrenalin Edition时会出现警告弹窗。</p><p><img src="https://cdn.jsdelivr.net/gh/leok77s/blog-leok77s-img@main/Windows%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8%E4%B8%AD%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91-2022-11-20-16-41-09.png" alt="AMD显卡驱动与AMD Radeon Software冲突"></p><h3 id="2-2-问题原因"><a href="#2-2-问题原因" class="headerlink" title="2.2 问题原因"></a>2.2 问题原因</h3><p>Windows自动更新时，其会更新Windows自己认为的合适的显卡驱动，此驱动与用户自行安装的AMD官方显卡驱动冲突，导致AMD Software: Adrenalin Edition与驱动对不上号，从而产生冲突，出现打不开AMD Software驱动控制面板的情况。</p><h3 id="2-3-解决方法"><a href="#2-3-解决方法" class="headerlink" title="2.3 解决方法"></a>2.3 解决方法</h3><h4 id="2-3-1-治标：重新安装AMD显卡驱动"><a href="#2-3-1-治标：重新安装AMD显卡驱动" class="headerlink" title="2.3.1 治标：重新安装AMD显卡驱动"></a>2.3.1 治标：重新安装AMD显卡驱动</h4><p>重新安装<a href="https://www.amd.com/zh-hans/support">AMD官网的显卡驱动</a>，即可解决问题。但是每次更新Windows系统后，都需要重新安装AMD显卡驱动，比较麻烦。</p><h4 id="2-3-2-治本：禁用Windows驱动更新"><a href="#2-3-2-治本：禁用Windows驱动更新" class="headerlink" title="2.3.2 治本：禁用Windows驱动更新"></a>2.3.2 治本：禁用Windows驱动更新</h4><p><em>此方法仅适用于Windows专业版及以上，Windows家庭版不适用。</em></p><ol><li>按下Win+R，输入gpedit.msc，打开组策略编辑器。</li><li>左侧依次展开“计算机配置”-&gt;“管理模板”-&gt;“Windows组件”-&gt;“Windows更新”。</li><li>右侧双击“Windows更新不包括驱动程序”，在弹出的“Windows更新不包括驱动程序”窗口中，选择“已启用”，点击确定。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/leok77s/blog-leok77s-img@main/Windows%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8%E4%B8%AD%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91-2022-11-20-16-47-02.png" alt="在组策略编辑器中关闭Windows自动驱动更新"></p><h2 id="3-AMD显卡掉驱动"><a href="#3-AMD显卡掉驱动" class="headerlink" title="3. AMD显卡掉驱动"></a>3. AMD显卡掉驱动</h2><h3 id="3-1-问题描述"><a href="#3-1-问题描述" class="headerlink" title="3.1 问题描述"></a>3.1 问题描述</h3><p>使用OBS录屏，以“窗口采集”模式录制游戏“暖雪”时，出现AMD显卡掉驱动的情况。</p><p><img src="https://cdn.jsdelivr.net/gh/leok77s/blog-leok77s-img@main/Windows%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8%E4%B8%AD%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91-2022-11-20-21-38-16.png" alt="AMD显卡掉驱动（驱动程序超时）"></p><h3 id="3-2-问题原因"><a href="#3-2-问题原因" class="headerlink" title="3.2 问题原因"></a>3.2 问题原因</h3><p>我不道啊，我只是一只小兔子，我也不知道为什么会出现这种情况。</p><p><img src="https://cdn.jsdelivr.net/gh/leok77s/blog-leok77s-img@main/Windows%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8%E4%B8%AD%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91-2022-11-20-21-46-03.png" alt="这个东西我没法和你解释"></p><blockquote><p>猜测：可能是暖雪优化不好，因为我之前以“窗口采集”模式采集过其他游戏，没有出现过这种情况。</p></blockquote><h3 id="3-3-解决方法"><a href="#3-3-解决方法" class="headerlink" title="3.3 解决方法"></a>3.3 解决方法</h3><p>我只找到了一种治标不治本的方法：以“显示器采集”模式录制游戏，然后在录制的视频中裁剪出游戏画面（全屏模式的游戏无需裁剪画面）。</p><blockquote><p>别问我为啥不用OBS的“游戏源”模式录制，问就是“游戏源”模式直接不识别暖雪。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> CMD </tag>
            
            <tag> Anaconda </tag>
            
            <tag> Flutter </tag>
            
            <tag> VS Code </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些使用博客图床的经验</title>
      <link href="/2022/11/16/%E4%B8%80%E4%BA%9B%E4%BD%BF%E7%94%A8%E5%8D%9A%E5%AE%A2%E5%9B%BE%E5%BA%8A%E7%9A%84%E7%BB%8F%E9%AA%8C/"/>
      <url>/2022/11/16/%E4%B8%80%E4%BA%9B%E4%BD%BF%E7%94%A8%E5%8D%9A%E5%AE%A2%E5%9B%BE%E5%BA%8A%E7%9A%84%E7%BB%8F%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<blockquote><p>对于富哥来说博客图床不是问题，直接使用阿里云、腾讯云的对象云存储当图床无疑是最省心的方法；可惜我不是富哥，只能琢磨免费图床的用法，在此期间踩了一些坑，在这篇博文中简要的说一下我用过的免费图床各自存在的问题及在Picgo中使用他们的方式</p></blockquote><ul><li>本文提及的网站及工具：<ul><li><a href="https://github.com/">GitHub</a></li><li><a href="https://picgo.github.io/PicGo-Doc/zh/">PicGo</a></li><li><a href="https://gitee.com/">Gitee</a></li><li><a href="https://smms.app/">SM.MS</a></li></ul></li></ul><h2 id="1-使用Gitee仓库当图床（不建议）"><a href="#1-使用Gitee仓库当图床（不建议）" class="headerlink" title="1. 使用Gitee仓库当图床（不建议）"></a>1. 使用Gitee仓库当图床（不建议）</h2><blockquote><p>因为Gitee外链被Ban了，此方法不建议使用，当且仅当你只使用Gitee Pages作为你的个人博客网站，或者只拿Markdown记笔记而不发布到其他博客网站上的情况下，可以使用Gitee仓库当图床</p></blockquote><p>我主要拿Markdown写博客，用的是GitHub Pages，而且我记笔记的时候图片都是用相对路径存在本地，不使用图床，所以对于我来说这种方法已经弃用了，实在想使用Gitee仓库的可以看一下<a href="https://github.com/leok77/blog-leok77-old-pdf/blob/main/%E4%BD%BF%E7%94%A8Hexo%2BGitHubPages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.pdf">blog-leok77-old-pdf&#x2F;使用Hexo+GitHubPages搭建个人博客.pdf</a>中的“使用Gitee+PicoGo搭建图床”一节，上述这篇博文写的时候Gitee外链还没有被Ban，所以GitHub Pages+Gitee图床的组合是行得通的，现在已经不能用了，但里面Picgo配置依旧有效。</p><h2 id="2-Simple-Free-Image-Hosting（SMMS）（不是很建议）"><a href="#2-Simple-Free-Image-Hosting（SMMS）（不是很建议）" class="headerlink" title="2. Simple Free Image Hosting（SMMS）（不是很建议）"></a>2. Simple Free Image Hosting（SMMS）（不是很建议）</h2><blockquote><p>先说结论：时好时不好，这可能是因为我的网络不好，但是写博客不是只给自己看的，别人的网络环境不一定能加载出图片的时候，博客阅读体验会非常差，所以不是很建议使用</p></blockquote><h3 id="2-1-存在的问题"><a href="#2-1-存在的问题" class="headerlink" title="2.1. 存在的问题"></a>2.1. 存在的问题</h3><p>基本上一搜索免费图床，随便找一个回答<a href="https://smms.app/">SMMS</a>都会出现在结果中，足以证明SMMS在免费图床界的地位，但是他被墙了（sm.ms），虽然上线了专门用于国区的域名（smms.app），但是我实际使用过程中还是遇到了一点问题：他的图片是以（s2.loli.net）域名访问的，我不知道是国内访问慢的原因还是这个域名被DNS污染了，一开始我测试的时候可以正常使用，过了一会儿发现博客上的图片用手机数据可以看，用WIFI的时候就加载不出来了，在电脑上一ping，时通时不通，所以我还是放弃使用这个图床了。</p><p><img src="https://cdn.jsdelivr.net/gh/leok77s/blog-leok77s-img@main/%E4%B8%80%E4%BA%9B%E4%BD%BF%E7%94%A8%E5%8D%9A%E5%AE%A2%E5%9B%BE%E5%BA%8A%E7%9A%84%E7%BB%8F%E9%AA%8C-2022-11-19-23-41-28.png" alt="Ping-s2.loli.net-不通"></p><h3 id="2-2-在Picgo中配置SMMS"><a href="#2-2-在Picgo中配置SMMS" class="headerlink" title="2.2. 在Picgo中配置SMMS"></a>2.2. 在Picgo中配置SMMS</h3><p>SMMS是Picgo默认支持的图床之一，且SMMS提供国区专用域名之后，Picgo紧跟着就添加了备用域名配置，可以说是开箱即用，只需要注册一个SMMS账号之后获取token就可以使用啦。</p><p>在<a href="https://smms.app/">Simple Free Image Hosting (smms.app)</a>依次点击页头导航栏右侧的“User”、“Dashboard”，然后在用户页面点击左侧的“API Token”、“Generate Secret Token”，然后复制token。</p><p><img src="https://cdn.jsdelivr.net/gh/leok77s/blog-leok77s-img@main/%E4%B8%80%E4%BA%9B%E4%BD%BF%E7%94%A8%E5%8D%9A%E5%AE%A2%E5%9B%BE%E5%BA%8A%E7%9A%84%E7%BB%8F%E9%AA%8C-2022-11-19-23-42-05.png" alt="SMMS-API Token"></p><p>在Picgo中的SM.MS配置中输入复制的Token，并在备用域名栏中输入（smms.app）就好啦。</p><p><img src="https://cdn.jsdelivr.net/gh/leok77s/blog-leok77s-img@main/%E4%B8%80%E4%BA%9B%E4%BD%BF%E7%94%A8%E5%8D%9A%E5%AE%A2%E5%9B%BE%E5%BA%8A%E7%9A%84%E7%BB%8F%E9%AA%8C-2022-11-19-23-42-31.png" alt="Picgo-SMMS"></p><p>一般来说配置使用和上传图片到SMMS不会出现问题，但是在访问自己图片时，可能会遇到（s2.loli.net）连不上的情况，所以不是很建议使用。</p><h2 id="3-使用GitHub仓库当图床（配合jsDelivr-CDN加速）"><a href="#3-使用GitHub仓库当图床（配合jsDelivr-CDN加速）" class="headerlink" title="3. 使用GitHub仓库当图床（配合jsDelivr-CDN加速）"></a>3. 使用GitHub仓库当图床（配合jsDelivr-CDN加速）</h2><blockquote><p>这是我目前使用的方案，存在的问题是jsdelivr可能会挂，之前（cdn.jsdelivr.net）遭受攻击无法访问的时候，其提供了（fastly.jsdelivr.net）作为备用，将域名替换掉即可使用，总体来说这个方案是我使用过的方案中最稳定的。<br>如果不使用CDN加速的话，有很大的概率会出现图片加载不出来的情况，别问，问就是GitHub日常被DNS污染</p></blockquote><h3 id="3-1-创建一个GitHub公有仓库"><a href="#3-1-创建一个GitHub公有仓库" class="headerlink" title="3.1. 创建一个GitHub公有仓库"></a>3.1. 创建一个GitHub公有仓库</h3><p>因为要拿这个仓库当图床，所以需要是一个public仓库，如果是private仓库的话，就没法访问里面的图片了。</p><h3 id="3-2-获取GitHub的Token"><a href="#3-2-获取GitHub的Token" class="headerlink" title="3.2. 获取GitHub的Token"></a>3.2. 获取GitHub的Token</h3><p>1.打开<a href="https://github.com/">GitHub</a>之后，点击右上角的头像，然后点击“Settings”。</p><p><img src="https://cdn.jsdelivr.net/gh/leok77s/blog-leok77s-img@main/%E4%B8%80%E4%BA%9B%E4%BD%BF%E7%94%A8%E5%8D%9A%E5%AE%A2%E5%9B%BE%E5%BA%8A%E7%9A%84%E7%BB%8F%E9%AA%8C-2022-11-19-23-42-57.png" alt="打开GitHub的Settings"></p><p>2.点击左侧最下方的Developer settings</p><p><img src="https://cdn.jsdelivr.net/gh/leok77s/blog-leok77s-img@main/%E4%B8%80%E4%BA%9B%E4%BD%BF%E7%94%A8%E5%8D%9A%E5%AE%A2%E5%9B%BE%E5%BA%8A%E7%9A%84%E7%BB%8F%E9%AA%8C-2022-11-19-23-43-18.png" alt="点击左侧最下方的Developer settings"></p><p>3.依次点击左边的“Personal access tokens”、“Token(classic)”，然后点击右边的“Generate new token”、“Generate new token(classic)”。</p><p><img src="https://cdn.jsdelivr.net/gh/leok77s/blog-leok77s-img@main/%E4%B8%80%E4%BA%9B%E4%BD%BF%E7%94%A8%E5%8D%9A%E5%AE%A2%E5%9B%BE%E5%BA%8A%E7%9A%84%E7%BB%8F%E9%AA%8C-2022-11-19-23-43-52.png" alt="Generate new token"></p><p>4.依次填写Token备注名字，将Token有效期修改为“No expiration”即永不过期，否则你需要每次到期都重新生成一个新的Token，然后勾选第一个“repo”，最后点击页面最下方的“Generate”即可生成Token，记得复制所生成的Token，因为这是你唯一一次在GitHub上看到它的机会。</p><p><img src="https://cdn.jsdelivr.net/gh/leok77s/blog-leok77s-img@main/%E4%B8%80%E4%BA%9B%E4%BD%BF%E7%94%A8%E5%8D%9A%E5%AE%A2%E5%9B%BE%E5%BA%8A%E7%9A%84%E7%BB%8F%E9%AA%8C-2022-11-19-23-44-10.png" alt="配置Token基础参数"></p><h3 id="3-3-在Picgo中配置GitHub"><a href="#3-3-在Picgo中配置GitHub" class="headerlink" title="3.3. 在Picgo中配置GitHub"></a>3.3. 在Picgo中配置GitHub</h3><ul><li>参照图示填写信息即可<ul><li>仓库名就是第一步中所创建的公有仓库名字“username&#x2F;repo_name”，以我的图床仓库为例，仓库名就是“leok77&#x2F;blog-leok77&#x3D;img”；</li><li>分支名一般是“main”或者“master”，以你自己创建的仓库的分支名为准；</li><li>Token就是第二步中所生成的Token；</li><li>存储路径一般留空，如果你希望自己的图片以文章为文件夹分门别类的存储的话，这里可以修改为文章名字，但是这样要记得检查此处配置，不然忘了修改的情况下，图片就存乱了，所以我选择留空；</li><li>自定义域名是<a href="https://cdn.jsdelivr.net/gh/username/repo_name">https://cdn.jsdelivr.net/gh/username/repo_name</a>，此处我的就是<a href="https://cdn.jsdelivr.net/gh/leok77/blog-leok77-img">https://cdn.jsdelivr.net/gh/leok77/blog-leok77-img</a>，如果你不想用CDN加速访问的话此处可以留空，如果想用其他的CDN加速的话此处修改为你所使用的CDN域名并参照你的CDN供应商所提供的使用方法；</li></ul></li></ul><blockquote><p>自定义域名还可以是<a href="https://cdn.jsdelivr.net/gh/username/repo_name@version">https://cdn.jsdelivr.net/gh/username/repo_name@version</a>，实际上jsdelivr官网建议的用法就是这种，其中“version”可以理解为GitHub仓库的分支名，比如此处我按照这种配置的应当是<a href="https://cdn.jsdelivr.net/gh/leok77s/blog-leok77s-img@main">https://cdn.jsdelivr.net/gh/leok77s/blog-leok77s-img@main</a><br>再者，前文中提到过，jsdelivr被污染过，当发现使用<a href="https://cnd.jsdelivr.net/">https://cnd.jsdelivr.net</a>无法加速时，可以尝试替换为<a href="https://fastly.jsdelivr.net/">https://fastly.jsdelivr.net</a></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/leok77s/blog-leok77s-img@main/%E4%B8%80%E4%BA%9B%E4%BD%BF%E7%94%A8%E5%8D%9A%E5%AE%A2%E5%9B%BE%E5%BA%8A%E7%9A%84%E7%BB%8F%E9%AA%8C-2022-11-19-23-44-30.png" alt="仓库名"></p><p><img src="https://cdn.jsdelivr.net/gh/leok77s/blog-leok77s-img@main/%E4%B8%80%E4%BA%9B%E4%BD%BF%E7%94%A8%E5%8D%9A%E5%AE%A2%E5%9B%BE%E5%BA%8A%E7%9A%84%E7%BB%8F%E9%AA%8C-2022-11-19-23-44-48.png" alt="在Picgo中配置GitHub"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于删除旧版博客内容的说明</title>
      <link href="/2022/11/16/%E5%85%B3%E4%BA%8E%E5%88%A0%E9%99%A4%E6%97%A7%E7%89%88%E5%8D%9A%E5%AE%A2%E5%86%85%E5%AE%B9%E7%9A%84%E8%AF%B4%E6%98%8E/"/>
      <url>/2022/11/16/%E5%85%B3%E4%BA%8E%E5%88%A0%E9%99%A4%E6%97%A7%E7%89%88%E5%8D%9A%E5%AE%A2%E5%86%85%E5%AE%B9%E7%9A%84%E8%AF%B4%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<blockquote><p>之前的博客内容已经全部转换为PDF格式，存放在了<a href="https://github.com/leok77/blog-leok77-old-pdf">这个仓库|blog-leok77-old-pdf</a>里</p></blockquote><h2 id="1-太长不看版"><a href="#1-太长不看版" class="headerlink" title="1. 太长不看版"></a>1. 太长不看版</h2><p>图床挂了+之前写的博客太烂了，所以决定删除旧版博客内容，只保留新版博客内容。</p><h2 id="2-详细说明版"><a href="#2-详细说明版" class="headerlink" title="2. 详细说明版"></a>2. 详细说明版</h2><p>之前使用的图床是Gitee，现在（实际上似乎2022年3月25号起）这种图床使用方法被Gitee给Ban了（网页端），如下图所示，我博客上的图片已经都无法显示了。如果只是本地浏览markdown源文件的话，是可以正常显示的。</p><p><img src="https://cdn.jsdelivr.net/gh/leok77s/blog-leok77s-img@main/%E5%85%B3%E4%BA%8E%E5%88%A0%E9%99%A4%E6%97%A7%E7%89%88%E5%8D%9A%E5%AE%A2%E5%86%85%E5%AE%B9%E7%9A%84%E8%AF%B4%E6%98%8E-2022-11-19-23-40-51.png" alt="俺的图图没啦"></p><p>实际上这件事我早就发现了，但一直没有写博客的动力，快一年（此文写于2022-11-16，上次更新博客好像是2022-01-23）没有更新内容了。</p><p>最近希望重新拾起自己的博客，所以这烂摊子多少得收拾一下，我知道可以直接使用picgo插件迁移图床，但是怎么说呢，之前写的这些内容都太草率了，我不想维护，打算直接推掉所有的博客然后重新写，那么这些旧的内容，我就把他们都转换成PDF然后储存在这个仓库里了。当然也正是因为我不想维护，所以这些PDF也只是处于“能看”的地步，我不想专门排版以及纠错，所以想看的就将就看吧。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 公告 </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
